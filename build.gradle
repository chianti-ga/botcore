plugins {
    id 'java'
    id 'idea'

    //Versioning
    id "org.ajoberstar.reckon" version "0.16.1"
    //Update deps
    id "com.github.ben-manes.versions" version "0.46.0"

    id "io.freefair.lombok" version "6.6.3"

    id 'java-library'
    id 'maven-publish'
}

group 'fr.skitou.botcore'

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://jitpack.io"
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
}
allprojects {
    dependencies {
        implementation 'com.google.guava:guava:31.1-jre'


        //===Unit tests===


        testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
        testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')

        testImplementation 'org.mockito:mockito-core:4.6.1'
        // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
        testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.6.1'

        // === APIs ===
        // JDA
        implementation("net.dv8tion:JDA:5.0.0-beta.5")
        implementation 'com.github.walkyst:lavaplayer-fork:1.4.0'

        // === Logging ==

        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6'
        // https://mvnrepository.com/artifact/ch.qos.logback/logback
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'

        // Utils
        implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'

        implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        implementation 'com.google.code.gson:gson:2.10.1'

        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
        // https://mvnrepository.com/artifact/commons-io/commons-io
        implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

        //Java Persistence API
        implementation("org.hibernate.orm:hibernate-core:6.1.2.Final")
        implementation 'org.hibernate.orm:hibernate-c3p0:6.1.2.Final'
        implementation 'org.hibernate.orm:hibernate-community-dialects:6.1.7.Final'
        implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.41.0.0'

        implementation 'com.vdurmont:emoji-java:5.1.1'

        implementation 'io.sentry:sentry:6.17.0'

        implementation group: 'club.minnced', name: 'discord-webhooks', version: '0.8.2'
    }

    idea {
        module {
            downloadJavadoc = true
        }
    }
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

tasks.withType(JavaCompile) {
    options.encoding('UTF-8')
}

reckon {
    scopeFromProp()
    stageFromProp('release', 'beta', 'dev')
}

test {
    useJUnitPlatform()
}

compileTestJava {
    //options.verbose(true)
    options.deprecation(true)
    options.compilerArgs.addAll(
            "-Xlint"
    )
}

jar {
    destinationDirectory.set file('build/libs/')
}

task copyJar(type: Copy) {
    dependsOn 'jar'
    from jar.getArchiveFile()
    into file('build/libs/')
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

dependencyUpdates {
    revision = "dev"
}

build {

}

java {
    withJavadocJar()
    withSourcesJar()
}
javadoc {
    options.encoding('UTF-8')
}
publishing {
    publications {
        maven(MavenPublication) {
            groupId = this.group
            artifactId = this.name
            version = this.version

            from components.java
        }
    }
}
